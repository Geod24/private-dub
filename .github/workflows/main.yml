name: build
on:
  push:
    branches:
      - 'master'
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  test:
    name: Dub Tests
    strategy:
      matrix:
        os: [ubuntu-latest]
        dc: [ldc-latest, dmd-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Install D compiler
        uses: mihails-strasuns/setup-dlang@v1.1.1
        with:
          compiler: ${{ matrix.dc }}

      - uses: actions/cache@v1
        with:
          path: ~/.dub
          key: ${{ runner.os }}-dub-${{ hashFiles('**/dub.selections.json') }}
          restore-keys: |
            ${{ runner.os }}-dub-

      - name: Test and Build
        run: |
          dub test
          dub -c it -b unittest
          dub build -b release

      - uses: actions/upload-artifact@master
        with:
          name: private-dub
          path: private-dub
        if: matrix.dc == 'ldc-latest'

  push:
    name: Push to hub.docker
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: actions/download-artifact@master
        with:
          name: private-dub
          path: private-dub

      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: skoppe/private-dub
          tag-sha: true
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: private-dub
