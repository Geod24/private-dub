on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: release

jobs:
  build:
    name: Upload Release Asset
    strategy:
      matrix:
        os: [ubuntu-latest]
        dc: [ldc-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Install D compiler
        uses: mihails-strasuns/setup-dlang@v0.4.0
        with:
          compiler: ${{ matrix.dc }}

      - uses: actions/cache@v1
        name: Setup cache
        with:
          path: ~/.dub
          key: ${{ runner.os }}-dub-${{ hashFiles('**/dub.selections.json') }}
          restore-keys: |
            ${{ runner.os }}-dub-

      - name: Build
        run: |
          dub build --build=release
          zip --junk-paths private-dub.zip private-dub

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./private-dub.zip
          asset_name: private-dub-linux.zip
          asset_content_type: application/zip
